### 解题思路

根据题意字符串的排列必需满足两个条件
1. 连续出现的数字1和2只最多是出现2次
2. 后面出现的字符在经过次数转化后会变为前面出现过的字符串，例如1 22 11 2 1 22 1 22 11 是可以转换为1 2 2 1 1 2 1 2 2刚好和前面的字符串对应

解题思路
1. 从最基本的122开始，扩大他就可以变成1 22 11，其中第一个1=1 第二个2 = 22，第三个2 = 11，因为连续1或2只能交替出现，那之后我们就可以用12211来当成初始串，继续开始往后扩写
2. 因为12211是由122扩写而来，所以要继续扩写12211的话只需要从122的下一个下标为3的字符开始即可，反正扩完都是一样的嘛，所以可以一路遍历扩写下去，直到字符串的长度大于等于n就可以停止扩写
3. 遍历sb，找到对应1的次数即可
4. 代码中num代表下一次要出现的字符，每次操作完后需要将1->2,2->1，1 ^ 3 = 2, 2 ^ 3 = 1。

### 代码

* java

```java
class Solution {
    public int magicalString(int n) {
        StringBuilder sb = new StringBuilder();
        sb.append("122");
        int num = 1;
        for(int i = 2; i < sb.length() && sb.length() <= n; i++){
            char c = sb.charAt(i);
            // 当前为1，sb要拼接1个字符
            if(c == '1'){
                sb.append(num);
                
            }else{
            // 当前为2，sb要拼接2个字符
                sb.append(num).append(num);
            }
            // 1 -> 2, 2 -> 1
            num ^= 3;
        }
        int ans = 0;
        for(int i = 0; i < n; i++){
            if(sb.charAt(i) == '1'){
                ans++;
            }
        }
        return ans;
    }
}
```

